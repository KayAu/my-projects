@model GreatSavings.ViewModels.MerchantViewModel

@{
    ViewBag.Title = "CreateProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="../../Content/bootstrap-timepicker.css" rel="stylesheet" />
@*<script src="../../Scripts/jquery-2.1.1.js"></script>
<script src="../../Scripts/bootstrap.js"></script>*@
<script src="~/Scripts/bootstrap-timepicker.js" type="text/javascript"></script>
<script src="~/Scripts/Business/Validation.js" type="text/javascript"></script>


<script type="text/javascript">
    function fileCheck() {
        $("#imgPath").val($("#ImageData").val());

        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        //if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
        //    alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        //}
    }


</script>

<div class="main-container">
    <h2>@Html.DisplayTextFor(model => model.Merchant.FirstName), let's start creating your company profile</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <ul class="nav nav-tabs" id="merchantDtlsTab">
            <li class="active"><a href="#form-leftSection">Company Details</a></li>
            <li><a href="#sectionMember">Member Details</a></li>
        </ul>
        <div class="form-horizontal form-container tab-content">
            <div id="form-leftSection" class="tab-pane fade in active">
                @Html.HiddenFor(model => model.Merchant.FirstName)
                @Html.HiddenFor(model => model.Merchant.LastName)
                @Html.HiddenFor(model => model.Merchant.UserId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.CompanyName, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Merchant.CompanyName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.CompanyName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.BusIndustryId, "Business Industry", new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.DropDownListFor(n => n.SelectedIndustry, Model.BusinessIndustries, "Please select an industry...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.BusIndustryId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.StreetName, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Merchant.StreetName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.StreetName)
                     </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.Postcode, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Merchant.Postcode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.Postcode)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.State, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                       @* @Html.DropDownListFor(n => n.SelectedState, Model.States, "Please select a state...", new { @class = "form-control" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.Country, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                      @*  @Html.DropDownListFor(n => n.SelectedCountry, Model.Countries, "Please select a country...", new { @class = "form-control" })*@
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.ContactNo, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Merchant.ContactNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.ContactNo)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Merchant.Website, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Merchant.Website, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Merchant.Website)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-xs-2">Operation Hours:</label>
                    
                    <div class="col-xs-10">
                        <div class="input-append bootstrap-timepicker">
                            <input id="start_time" type="text" name="start_time" class="timepicker" placeholder="h:mm PM" data-default-time="false" data-minute-step="5">
                            <span class="add-on"><i class="icon-time"></i></span>
                            @Html.HiddenFor(model => model.StartTime)
                        </div>
                        <label class="control-label field-label "> to </label>
                        <div class="input-append bootstrap-timepicker">
                            <input id="end_time" type="text" name="end_time" class="timepicker" placeholder="h:mm PM" data-default-time="false" data-minute-step="5">
                            <span class="add-on"><i class="icon-time"></i></span>
                            @Html.HiddenFor(model => model.EndTime)
                        </div>
                        
                    </div>
                </div>
                <div class="form-group">
                     @Html.LabelFor(model => model.Merchant.CompanyImg, new { @class = "control-label col-xs-2" })
                    <div class="col-xs-10">
                        
                        <div class="input-group">
                            <span class="input-group-btn">
                                <span class="btn btn-primary btn-file">
                                    Browse… <input type="file" name="ImageData" id="ImageData" onchange="fileCheck();"  />
                                </span>
                            </span>
                            <input id="imgPath" type="text" class="form-control" readonly="">
                        </div>

                        @Html.ValidationMessageFor(model => model.Merchant.CompanyImg)
                    </div>
                </div>
                <p>
                    <input type="submit" value="Submit" class="btn btn-large btn-primary btn-r-pos" />
                </p>
             </div>
            
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
